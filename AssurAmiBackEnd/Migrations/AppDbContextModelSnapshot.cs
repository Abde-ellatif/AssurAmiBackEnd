// <auto-generated />
using System;
using AssurAmiBackEnd.Infrastructure.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssurAmiBackEnd.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Assureur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeAssureur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("libelet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assureurs");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateOnly?>("DateFeet")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateNaissance")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateSortie")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdAssureur")
                        .HasColumnType("int");

                    b.Property<int>("IdGestionnaire")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("assureurId")
                        .HasColumnType("bigint");

                    b.Property<long?>("gestionnaireId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("assureurId");

                    b.HasIndex("gestionnaireId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Erreur", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Erreurs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Erreurs");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.FileStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateUpload")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdErreur")
                        .HasColumnType("int");

                    b.Property<string>("NomFichier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarque")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StockagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("erreurId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("erreurId");

                    b.ToTable("FileStatuses");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Gestionnaire", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("CodeGestionnaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Libellet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gestionnaires");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Client", b =>
                {
                    b.HasOne("AssurAmiBackEnd.Core.Entity.Assureur", "assureur")
                        .WithMany("clients")
                        .HasForeignKey("assureurId");

                    b.HasOne("AssurAmiBackEnd.Core.Entity.Gestionnaire", "gestionnaire")
                        .WithMany("clients")
                        .HasForeignKey("gestionnaireId");

                    b.Navigation("assureur");

                    b.Navigation("gestionnaire");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.FileStatus", b =>
                {
                    b.HasOne("AssurAmiBackEnd.Core.Entity.Erreur", "erreur")
                        .WithMany("FileStatuses")
                        .HasForeignKey("erreurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("erreur");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Assureur", b =>
                {
                    b.Navigation("clients");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Erreur", b =>
                {
                    b.Navigation("FileStatuses");
                });

            modelBuilder.Entity("AssurAmiBackEnd.Core.Entity.Gestionnaire", b =>
                {
                    b.Navigation("clients");
                });
#pragma warning restore 612, 618
        }
    }
}
